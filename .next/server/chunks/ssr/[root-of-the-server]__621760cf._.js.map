{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/mona_sans_47061cc2.module.css [app-rsc] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"className\": \"mona_sans_47061cc2-module__TflmSa__className\",\n  \"variable\": \"mona_sans_47061cc2-module__TflmSa__variable\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA","ignoreList":[0]}},
    {"offset": {"line": 11, "column": 0}, "map": {"version":3,"sources":["turbopack:///[next]/internal/font/google/mona_sans_47061cc2.js"],"sourcesContent":["import cssModule from \"@vercel/turbopack-next/internal/font/google/cssmodule.module.css?{%22path%22:%22layout.tsx%22,%22import%22:%22Mona_Sans%22,%22arguments%22:[{%22variable%22:%22--font-mona-sans%22,%22subsets%22:[%22latin%22]}],%22variableName%22:%22monaSans%22}\";\nconst fontData = {\n    className: cssModule.className,\n    style: {\n        fontFamily: \"'Mona Sans', 'Mona Sans Fallback'\",\n        fontStyle: \"normal\",\n\n    },\n};\n\nif (cssModule.variable != null) {\n    fontData.variable = cssModule.variable;\n}\n\nexport default fontData;\n"],"names":[],"mappings":";;;;AAAA;;AACA,MAAM,WAAW;IACb,WAAW,oKAAS,CAAC,SAAS;IAC9B,OAAO;QACH,YAAY;QACZ,WAAW;IAEf;AACJ;AAEA,IAAI,oKAAS,CAAC,QAAQ,IAAI,MAAM;IAC5B,SAAS,QAAQ,GAAG,oKAAS,CAAC,QAAQ;AAC1C;uCAEe","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/components/Navbar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/Navbar.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/Navbar.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/components/Navbar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/Navbar.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/Navbar.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAqQ,GAClS,mCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 146, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/firebase/client.ts"],"sourcesContent":["import { getApp, getApps, initializeApp } from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\r\n    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\r\n    measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\nexport const app = !getApps().length ? initializeApp(firebaseConfig) : getApp();\r\n\r\nexport const auth = getAuth(app);\r\nexport const db = getFirestore(app);\r\n"],"names":[],"mappings":";;;;;;;;AAAA;AAAA;AACA;AAAA;AACA;AAAA;;;;AAEA,MAAM,iBAAiB;IACnB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACjB;AAEO,MAAM,MAAM,CAAC,IAAA,2KAAO,IAAG,MAAM,GAAG,IAAA,iLAAa,EAAC,kBAAkB,IAAA,0KAAM;AAEtE,MAAM,OAAO,IAAA,6KAAO,EAAC;AACrB,MAAM,KAAK,IAAA,iLAAY,EAAC","debugId":null}},
    {"offset": {"line": 179, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/context/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState, ReactNode } from \"react\";\r\nimport { getAuth, onAuthStateChanged, User } from \"firebase/auth\";\r\nimport { app } from \"@/firebase/client\";\r\n\r\ninterface AuthContextType {\r\n  currentUser: User | null;\r\n  loading: boolean;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType>({\r\n  currentUser: null,\r\n  loading: true,\r\n});\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    const auth = getAuth(app);\r\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\r\n      setCurrentUser(user);\r\n      setLoading(false);\r\n    });\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, loading }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AAAA;AACA;;;;;AAOA,MAAM,4BAAc,IAAA,sNAAa,EAAkB;IACjD,aAAa;IACb,SAAS;AACX;AAMO,MAAM,eAA4C,CAAC,EAAE,QAAQ,EAAE;IACpE,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAc;IAC5D,MAAM,CAAC,SAAS,WAAW,GAAG,IAAA,iNAAQ,EAAU;IAEhD,IAAA,kNAAS,EAAC;QACR,MAAM,OAAO,IAAA,6KAAO,EAAC,yHAAG;QACxB,MAAM,cAAc,IAAA,wLAAkB,EAAC,MAAM,CAAC;YAC5C,eAAe;YACf,WAAW;QACb;QACA,OAAO,IAAM;IACf,GAAG,EAAE;IAEL,qBACE,8OAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAa;QAAQ;kBACjD;;;;;;AAGP;AAEO,MAAM,UAAU,IAAM,IAAA,mNAAU,EAAC","debugId":null}},
    {"offset": {"line": 226, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/app/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Mona_Sans } from \"next/font/google\";\nimport \"./globals.css\";\nimport {Toaster} from \"sonner\";\nimport Navbar from \"@/components/Navbar\";\nimport { AuthProvider } from \"@/context/AuthContext\";\n\nconst monaSans = Mona_Sans({\n  variable: \"--font-mona-sans\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"InstaPrep\",\n  description: \"An AI-Powered Interview platform\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\" className= \"dark\">\n      <body className={`${monaSans.className}  antialiased pattern`}>\n        <AuthProvider>\n          <Navbar />\n          <div className=\"pt-20\">{/* Add padding for fixed navbar */}\n            {children}\n          </div>\n          <Toaster/>\n        </AuthProvider>\n      </body>\n    </html>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;AAGA;AACA;AACA;;;;;;;AAOO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAEe,SAAS,WAAW,EACjC,QAAQ,EAGR;IACA,qBACE,8OAAC;QAAK,MAAK;QAAK,WAAW;kBACzB,cAAA,8OAAC;YAAK,WAAW,GAAG,wJAAQ,CAAC,SAAS,CAAC,qBAAqB,CAAC;sBAC3D,cAAA,8OAAC,uIAAY;;kCACX,8OAAC,gIAAM;;;;;kCACP,8OAAC;wBAAI,WAAU;kCACZ;;;;;;kCAEH,8OAAC,mJAAO;;;;;;;;;;;;;;;;;;;;;AAKlB","debugId":null}}]
}