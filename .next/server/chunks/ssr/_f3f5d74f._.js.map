{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,8OAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,kHAAE,EACX,8bACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/lib/actions/general.action.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { generateText } from \"ai\";\r\nimport { google } from \"@ai-sdk/google\";\r\nimport { adminDb } from \"@/firebase/admin\";\r\n\r\nexport async function generateInterviewDossier(params: GenerateInterviewDossierParams) {\r\n    const { jobDescription, resume, companyName, concerns, isAxonMode = false } = params;\r\n\r\n    // Validate inputs\r\n    if (!jobDescription || !resume || !companyName) {\r\n        return { success: false, error: \"Missing required fields: jobDescription, resume, or companyName\" };\r\n    }\r\n\r\n    try {\r\n        console.log(\"Generating interview dossier with inputs:\", {\r\n            companyName,\r\n            jobDescriptionLength: jobDescription.length,\r\n            resumeLength: resume.length,\r\n            concernsLength: concerns.length\r\n        });\r\n\r\n        const prompt = isAxonMode ? `\r\nYou are AXON, an elite AI interview strategist. Your function is to generate a hyper-personalized, data-driven \"Interview Briefing.\"\r\n\r\nYour entire output must be in Markdown and strictly follow the structure below using the specified delimiters and formatting. Do not add any conversational text outside of this structure.\r\n\r\n<--BEGIN BRIEFING-->\r\n\r\n<--SECTION: HEADER-->\r\n# Interview Briefing: [Job Title] at ${companyName}\r\n**Synergy Score:** [Generate a numerical percentage score from 1-100 representing the match between the resume and job description, e.g., 85%]\r\n\r\n<--SECTION: SNAPSHOT-->\r\n## üöÄ Strategic Snapshot\r\n[In 3 bullet points, summarize the candidate's most compelling selling points. Frame them as \"strategic assets.\"]\r\n* **Strategic Asset 1:** ...\r\n* **Strategic Asset 2:** ...\r\n* **Strategic Asset 3:** ...\r\n\r\n<--SECTION: SKILL_ANALYSIS-->\r\n## üìä Skill Synergy Analysis\r\n[Identify the top 5 most important skills from the job description. For each, rate the candidate's experience from their resume on a scale of 1-5. Provide a brief justification.]\r\n* **[Skill Name 1]:** [Rating/5] - *Justification...*\r\n* **[Skill Name 2]:** [Rating/5] - *Justification...*\r\n* **[Skill Name 3]:** [Rating/5] - *Justification...*\r\n* **[Skill Name 4]:** [Rating/5] - *Justification...*\r\n* **[Skill Name 5]:** [Rating/5] - *Justification...*\r\n\r\n<--SECTION: QUESTIONS-->\r\n## üí° Intelligent Questions\r\n[Generate 8 questions. For EACH question, provide a rationale and at least one tag from this list: #Culture, #Technical, #Growth, #Strategy, #Logistics. Format each as a block.]\r\n\r\n**Question:** \"What does the onboarding process look like for this role, and what are the key milestones for the first 90 days?\"\r\n**Rationale:** This shows you are forward-thinking and focused on hitting the ground running effectively.\r\n**Tags:** #Logistics #Growth\r\n\r\n**Question:** \"How does the team handle collaboration on complex projects, especially when there are differing technical opinions?\"\r\n**Rationale:** This helps you understand the team's dynamic, communication style, and conflict resolution process.\r\n**Tags:** #Culture #Technical\r\n\r\n[...generate 6 more questions following this exact format...]\r\n\r\n<--SECTION: RED_FLAG_RADAR-->\r\n## üö© Red Flag Radar\r\n[Identify 1-2 potential gaps or concerns. For each, provide a \"Proactive Reframe\" strategy.]\r\n* **Potential Flag:** [Describe the gap, e.g., \"Lack of direct experience with Python.\"]\r\n    * **Proactive Reframe:** [Provide a strategy, e.g., \"Highlight your rapid learning ability by mentioning how you quickly mastered Java for the X project, and state your enthusiasm for applying that skill to Python.\"].\r\n\r\n<--END BRIEFING-->\r\n\r\n**INPUTS:**\r\nJob Description: ${jobDescription}\r\nResume: ${resume}\r\nCompany: ${companyName}\r\nConcerns: ${concerns}\r\n        ` : `\r\nYou are \"Interview Strategist AI,\" an expert career coach. Your task is to generate a personalized \"Interview Dossier\" based on the user's data.\r\n\r\nThe output must be in clean, well-formatted Markdown. Use \\`###\\` for each section title. Do not add any conversational intro or outro.\r\n\r\n---\r\n\r\n### üöÄ Your Key Selling Points\r\nAnalyze the resume against the job description. In 3-4 bullet points, summarize the user's strongest qualifications that make them an excellent fit.\r\n\r\n### üéØ Strategic Questions to Ask\r\nGenerate 8 insightful questions. For EACH question, add a brief \"Rationale\" in italics. Organize them into these categories using bold titles:\r\n**About the Role & Success**\r\n**About the Team & Culture**\r\n**About Company Strategy**\r\n\r\n### üö© Potential Gaps to Prepare For\r\nIdentify 1-2 potential gaps between the resume and the job description. For each, suggest a brief, proactive way to address it.\r\n\r\n### ‚≠ê Your Powerful Closing Statement\r\nCraft a concise, powerful closing statement template (2-3 sentences) that the user can adapt to end the interview on a high note.\r\n\r\n---\r\n**INPUTS:**\r\nJob Description: ${jobDescription}\r\nResume: ${resume}\r\nCompany: ${companyName}\r\nConcerns: ${concerns}\r\n        `;\r\n\r\n        const systemPrompt = isAxonMode \r\n            ? \"You are AXON, an elite AI interview strategist. Generate hyper-personalized, data-driven interview briefings with exact formatting and delimiters as specified.\"\r\n            : \"You are an expert career coach and interview strategist. Generate comprehensive, actionable interview preparation materials in clean Markdown format.\";\r\n\r\n        const { text } = await generateText({\r\n            model: google(\"gemini-2.0-flash-001\"),\r\n            prompt,\r\n            system: systemPrompt,\r\n        });\r\n\r\n        console.log(\"Generated text length:\", text?.length || 0);\r\n        console.log(\"Generated text preview:\", text?.substring(0, 200) || \"No text generated\");\r\n\r\n        if (!text || text.trim().length === 0) {\r\n            return { success: false, error: \"AI generated empty response\" };\r\n        }\r\n\r\n        // Store dossier in Firestore\r\n        const dossierId = `dossier_${Date.now()}_${params.userId}`;\r\n        const dossierDoc = {\r\n            id: dossierId,\r\n            userId: params.userId,\r\n            jobDescription: params.jobDescription,\r\n            resume: params.resume,\r\n            companyName: params.companyName,\r\n            concerns: params.concerns,\r\n            dossier: text,\r\n            isAxonMode: params.isAxonMode || false,\r\n            createdAt: new Date(),\r\n        };\r\n\r\n        await adminDb.collection('dossiers').doc(dossierId).set(dossierDoc);\r\n\r\n        return { success: true, dossier: text };\r\n    } catch (error) {\r\n        console.error(\"Error generating interview dossier:\", error);\r\n        return { success: false, error: `Failed to generate interview dossier: ${error instanceof Error ? error.message : 'Unknown error'}` };\r\n    }\r\n}\r\n\r\nexport async function generateChatResponse(params: {\r\n    interviewBriefing: string;\r\n    conversationHistory: Array<{ role: string; content: string; timestamp: Date }>;\r\n    userMessage: string;\r\n}) {\r\n    const { interviewBriefing, conversationHistory, userMessage } = params;\r\n\r\n    try {\r\n        // Format conversation history\r\n        const formattedHistory = conversationHistory\r\n            .map(msg => `${msg.role === \"user\" ? \"User\" : \"Coach\"}: ${msg.content}`)\r\n            .join(\"\\n\");\r\n\r\n        const { text } = await generateText({\r\n            model: google(\"gemini-2.0-flash-001\"),\r\n            prompt: `\r\n**ROLE & GOAL**\r\nYou are an AI Interview Coach, an expert assistant to the main \"AXON\" strategist. Your name is \"Coach.\" Your primary goal is to help a job candidate understand, expand upon, and practice with the specific \"Interview Briefing\" they have already generated. You must be encouraging, concise, and professional.\r\n\r\n**CONTEXT**\r\nYou will be given the complete [INTERVIEW BRIEFING] and the ongoing [CONVERSATION HISTORY]. All of your responses MUST be based on this context.\r\n\r\n**CAPABILITIES (What you CAN do):**\r\n\r\n1.  **Clarify Concepts:** If the user asks about an interview term (e.g., \"What is the STAR method?\"), provide a clear, concise definition.\r\n2.  **Generate More Questions:** If the user asks for more questions about a specific topic (e.g., \"Can you give me another question about team culture?\"), generate 1-2 relevant, insightful questions.\r\n3.  **Role-Play & Practice:** If the user says \"Let's practice\" or \"Ask me a question,\" you will act as the interviewer.\r\n    * Pick one of the insightful questions from the briefing.\r\n    * Ask it clearly.\r\n    * After the user provides their answer, give them brief, constructive feedback based on the STAR method (Situation, Task, Action, Result). The feedback should be encouraging.\r\n4.  **Company Research (Simulated):** If the user asks for more information about the company, provide a brief, professional summary as if you had just done a quick web search. Preface your answer with \"Based on publicly available information...\"\r\n5.  **Rephrasing & Tone:** If the user asks for help rephrasing a question or an answer, provide a better alternative, explaining why it's more effective.\r\n\r\n**RULES & CONSTRAINTS (What you CANNOT do):**\r\n\r\n* **DO NOT** invent facts about the company.\r\n* **DO NOT** answer questions outside the scope of interview preparation. If asked, gracefully respond with: \"My expertise is focused on helping you prepare for this interview. How about we practice one of the questions from your briefing?\"\r\n* **ALWAYS** be concise. Use bullet points and short paragraphs.\r\n\r\n---\r\n**INPUTS:**\r\n\r\n**[INTERVIEW BRIEFING]:**\r\n${interviewBriefing || \"No interview briefing available yet. Please generate one first.\"}\r\n\r\n**[CONVERSATION HISTORY]:**\r\n${formattedHistory}\r\n\r\n**[USER'S NEWEST MESSAGE]:**\r\n${userMessage}\r\n            `,\r\n            system: \"You are Coach, an AI Interview Coach. Be encouraging, concise, and professional. Focus only on interview preparation and practice.\",\r\n        });\r\n\r\n        if (!text || text.trim().length === 0) {\r\n            return { success: false, error: \"AI generated empty response\" };\r\n        }\r\n\r\n        return { success: true, message: text };\r\n    } catch (error) {\r\n        console.error(\"Error generating chat response:\", error);\r\n        return { success: false, error: `Failed to generate chat response: ${error instanceof Error ? error.message : 'Unknown error'}` };\r\n    }\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;;IAkJsB,uBAAA,WAAA,GAAA,IAAA,+OAAA,EAAA,8CAAA,oOAAA,EAAA,KAAA,GAAA,0OAAA,EAAA","debugId":null}},
    {"offset": {"line": 41, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/components/Chatbot.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { generateChatResponse } from \"@/lib/actions/general.action\";\r\n\r\ninterface Message {\r\n  id: string;\r\n  role: \"user\" | \"assistant\";\r\n  content: string;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface ChatbotProps {\r\n  interviewBriefing?: string;\r\n}\r\n\r\nexport default function Chatbot({ interviewBriefing }: ChatbotProps) {\r\n  const [messages, setMessages] = useState<Message[]>([]);\r\n  const [mounted, setMounted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setMounted(true);\r\n    setMessages([{\r\n      id: \"1\",\r\n      role: \"assistant\",\r\n      content: \"Hi! I'm Coach, your AI Interview Coach. I'm here to help you understand and practice with your Interview Briefing. How can I assist you today?\",\r\n      timestamp: new Date()\r\n    }]);\r\n  }, []);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputValue.trim() || isLoading) return;\r\n\r\n    const userMessage: Message = {\r\n      id: Date.now().toString(),\r\n      role: \"user\",\r\n      content: inputValue.trim(),\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue(\"\");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await generateChatResponse({\r\n        interviewBriefing: interviewBriefing || \"\",\r\n        conversationHistory: messages,\r\n        userMessage: inputValue.trim()\r\n      });\r\n\r\n      if (response.success && response.message) {\r\n        const assistantMessage: Message = {\r\n          id: (Date.now() + 1).toString(),\r\n          role: \"assistant\",\r\n          content: response.message,\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, assistantMessage]);\r\n      } else {\r\n        const errorMessage: Message = {\r\n          id: (Date.now() + 1).toString(),\r\n          role: \"assistant\",\r\n          content: \"I apologize, but I'm having trouble processing your request right now. Please try again.\",\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, errorMessage]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      const errorMessage: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        role: \"assistant\",\r\n        content: \"I apologize, but I encountered an error. Please try again.\",\r\n        timestamp: new Date()\r\n      };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-border max-w-2xl mx-auto\">\r\n      <div className=\"card-interview\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center gap-3 mb-4 pb-4 border-b border-gray-200\">\r\n          <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center\">\r\n            <span className=\"text-white text-sm font-bold\">C</span>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"font-semibold text-lime-100\">Coach</h3>\r\n            <p className=\"text-sm text-gray-500\">AI Interview Coach</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Messages */}\r\n        <div className=\"h-96 overflow-y-auto mb-4 space-y-4\">\r\n          {messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              className={`flex ${message.role === \"user\" ? \"justify-end\" : \"justify-start\"}`}\r\n            >\r\n              <div\r\n                className={`max-w-[80%] p-3 rounded-lg ${\r\n                  message.role === \"user\"\r\n                    ? \"bg-blue-500 text-white\"\r\n                    : \"bg-gray-800 border border-gray-600 text-white\"\r\n                }`}\r\n              >\r\n                <p className=\"text-sm whitespace-pre-wrap\">{message.content}</p>\r\n                <p className=\"text-xs opacity-70 mt-1\">\r\n                  {mounted ? `${message.timestamp.getHours().toString().padStart(2, '0')}:${message.timestamp.getMinutes().toString().padStart(2, '0')}` : ''}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {isLoading && (\r\n            <div className=\"flex justify-start\">\r\n              <div className=\"bg-gray-800 border border-gray-600 p-3 rounded-lg\">\r\n                <div className=\"flex space-x-1\">\r\n                  <div className=\"w-2 h-2 bg-gray-300 rounded-full animate-bounce\"></div>\r\n                  <div className=\"w-2 h-2 bg-gray-300 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\r\n                  <div className=\"w-2 h-2 bg-gray-300 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Input */}\r\n        <div className=\"flex gap-2\">\r\n          <Input\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Ask me about your interview preparation...\"\r\n            disabled={isLoading}\r\n            className=\"flex-1\"\r\n          />\r\n          <Button\r\n            onClick={handleSendMessage}\r\n            disabled={isLoading || !inputValue.trim()}\r\n            className=\"btn-primary\"\r\n          >\r\n            Send\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Quick Actions */}\r\n        <div className=\"mt-4 pt-4 border-t border-gray-200\">\r\n          <p className=\"text-xs text-gray-500 mb-2\">Quick actions:</p>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => setInputValue(\"Let's practice - ask me a question\")}\r\n              disabled={isLoading}\r\n              className=\"text-xs sm:text-sm\"\r\n            >\r\n              Practice Interview\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => setInputValue(\"What is the STAR method?\")}\r\n              disabled={isLoading}\r\n              className=\"text-xs sm:text-sm\"\r\n            >\r\n              Explain STAR Method\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => setInputValue(\"Give me more questions about team culture\")}\r\n              disabled={isLoading}\r\n              className=\"text-xs sm:text-sm\"\r\n            >\r\n              More Questions\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/components/Beams.tsx"],"sourcesContent":["'use client';\n\nimport { forwardRef, useImperativeHandle, useEffect, useRef, useMemo, FC, ReactNode } from 'react';\n\nimport * as THREE from 'three';\n\nimport { Canvas, useFrame } from '@react-three/fiber';\nimport { PerspectiveCamera } from '@react-three/drei';\nimport { degToRad } from 'three/src/math/MathUtils.js';\n\ntype UniformValue = THREE.IUniform<unknown> | unknown;\n\ninterface ExtendMaterialConfig {\n  header: string;\n  vertexHeader?: string;\n  fragmentHeader?: string;\n  material?: THREE.MeshPhysicalMaterialParameters & { fog?: boolean };\n  uniforms?: Record<string, UniformValue>;\n  vertex?: Record<string, string>;\n  fragment?: Record<string, string>;\n}\n\ntype ShaderWithDefines = THREE.ShaderLibShader & {\n  defines?: Record<string, string | number | boolean>;\n};\n\nfunction extendMaterial<T extends THREE.Material = THREE.Material>(\n  BaseMaterial: new (params?: THREE.MaterialParameters) => T,\n  cfg: ExtendMaterialConfig\n): THREE.ShaderMaterial {\n  const physical = THREE.ShaderLib.physical as ShaderWithDefines;\n  const { vertexShader: baseVert, fragmentShader: baseFrag, uniforms: baseUniforms } = physical;\n  const baseDefines = physical.defines ?? {};\n\n  const uniforms: Record<string, THREE.IUniform> = THREE.UniformsUtils.clone(baseUniforms);\n\n  const defaults = new BaseMaterial(cfg.material || {}) as T & {\n    color?: THREE.Color;\n    roughness?: number;\n    metalness?: number;\n    envMap?: THREE.Texture;\n    envMapIntensity?: number;\n  };\n\n  if (defaults.color) uniforms.diffuse.value = defaults.color;\n  if ('roughness' in defaults) uniforms.roughness.value = defaults.roughness;\n  if ('metalness' in defaults) uniforms.metalness.value = defaults.metalness;\n  if ('envMap' in defaults) uniforms.envMap.value = defaults.envMap;\n  if ('envMapIntensity' in defaults) uniforms.envMapIntensity.value = defaults.envMapIntensity;\n\n  Object.entries(cfg.uniforms ?? {}).forEach(([key, u]) => {\n    uniforms[key] =\n      u !== null && typeof u === 'object' && 'value' in u\n        ? (u as THREE.IUniform<unknown>)\n        : ({ value: u } as THREE.IUniform<unknown>);\n  });\n\n  let vert = `${cfg.header}\\n${cfg.vertexHeader ?? ''}\\n${baseVert}`;\n  let frag = `${cfg.header}\\n${cfg.fragmentHeader ?? ''}\\n${baseFrag}`;\n\n  for (const [inc, code] of Object.entries(cfg.vertex ?? {})) {\n    vert = vert.replace(inc, `${inc}\\n${code}`);\n  }\n  for (const [inc, code] of Object.entries(cfg.fragment ?? {})) {\n    frag = frag.replace(inc, `${inc}\\n${code}`);\n  }\n\n  const mat = new THREE.ShaderMaterial({\n    defines: { ...baseDefines },\n    uniforms,\n    vertexShader: vert,\n    fragmentShader: frag,\n    lights: true,\n    fog: !!cfg.material?.fog\n  });\n\n  return mat;\n}\n\nconst CanvasWrapper: FC<{ children: ReactNode }> = ({ children }) => (\n  <Canvas dpr={[1, 2]} frameloop=\"always\" className=\"w-full h-full relative\">\n    {children}\n  </Canvas>\n);\n\nconst hexToNormalizedRGB = (hex: string): [number, number, number] => {\n  const clean = hex.replace('#', '');\n  const r = parseInt(clean.substring(0, 2), 16);\n  const g = parseInt(clean.substring(2, 4), 16);\n  const b = parseInt(clean.substring(4, 6), 16);\n  return [r / 255, g / 255, b / 255];\n};\n\nconst noise = `\nfloat random (in vec2 st) {\n    return fract(sin(dot(st.xy,\n                         vec2(12.9898,78.233)))*\n        43758.5453123);\n}\nfloat noise (in vec2 st) {\n    vec2 i = floor(st);\n    vec2 f = fract(st);\n    float a = random(i);\n    float b = random(i + vec2(1.0, 0.0));\n    float c = random(i + vec2(0.0, 1.0));\n    float d = random(i + vec2(1.0, 1.0));\n    vec2 u = f * f * (3.0 - 2.0 * f);\n    return mix(a, b, u.x) +\n           (c - a)* u.y * (1.0 - u.x) +\n           (d - b) * u.x * u.y;\n}\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P);\n  vec3 Pi1 = Pi0 + vec3(1.0);\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P);\n  vec3 Pf1 = Pf0 - vec3(1.0);\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000,g000),dot(g010,g010),dot(g100,g100),dot(g110,g110)));\n  g000 *= norm0.x; g010 *= norm0.y; g100 *= norm0.z; g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001,g001),dot(g011,g011),dot(g101,g101),dot(g111,g111)));\n  g001 *= norm1.x; g011 *= norm1.y; g101 *= norm1.z; g111 *= norm1.w;\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x,Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x,Pf1.y,Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy,Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy,Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x,Pf0.y,Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x,Pf1.yz));\n  float n111 = dot(g111, Pf1);\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000,n100,n010,n110),vec4(n001,n101,n011,n111),fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy,n_z.zw,fade_xyz.y);\n  float n_xyz = mix(n_yz.x,n_yz.y,fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n`;\n\ninterface BeamsProps {\n  beamWidth?: number;\n  beamHeight?: number;\n  beamNumber?: number;\n  lightColor?: string;\n  speed?: number;\n  noiseIntensity?: number;\n  scale?: number;\n  rotation?: number;\n}\n\nconst Beams: FC<BeamsProps> = ({\n  beamWidth = 2,\n  beamHeight = 15,\n  beamNumber = 12,\n  lightColor = '#ffffff',\n  speed = 2,\n  noiseIntensity = 1.75,\n  scale = 0.2,\n  rotation = 0\n}) => {\n  const meshRef = useRef<THREE.Mesh<THREE.BufferGeometry, THREE.ShaderMaterial>>(null!);\n\n  const beamMaterial = useMemo(\n    () =>\n      extendMaterial(THREE.MeshStandardMaterial, {\n        header: `\n  varying vec3 vEye;\n  varying float vNoise;\n  varying vec2 vUv;\n  varying vec3 vPosition;\n  uniform float time;\n  uniform float uSpeed;\n  uniform float uNoiseIntensity;\n  uniform float uScale;\n  ${noise}`,\n        vertexHeader: `\n  float getPos(vec3 pos) {\n    vec3 noisePos =\n      vec3(pos.x * 0., pos.y - uv.y, pos.z + time * uSpeed * 3.) * uScale;\n    return cnoise(noisePos);\n  }\n  vec3 getCurrentPos(vec3 pos) {\n    vec3 newpos = pos;\n    newpos.z += getPos(pos);\n    return newpos;\n  }\n  vec3 getNormal(vec3 pos) {\n    vec3 curpos = getCurrentPos(pos);\n    vec3 nextposX = getCurrentPos(pos + vec3(0.01, 0.0, 0.0));\n    vec3 nextposZ = getCurrentPos(pos + vec3(0.0, -0.01, 0.0));\n    vec3 tangentX = normalize(nextposX - curpos);\n    vec3 tangentZ = normalize(nextposZ - curpos);\n    return normalize(cross(tangentZ, tangentX));\n  }`,\n        fragmentHeader: '',\n        vertex: {\n          '#include <begin_vertex>': `transformed.z += getPos(transformed.xyz);`,\n          '#include <beginnormal_vertex>': `objectNormal = getNormal(position.xyz);`\n        },\n        fragment: {\n          '#include <dithering_fragment>': `\n    float randomNoise = noise(gl_FragCoord.xy);\n    gl_FragColor.rgb -= randomNoise / 15. * uNoiseIntensity;`\n        },\n        material: { fog: true },\n        uniforms: {\n          diffuse: new THREE.Color(...hexToNormalizedRGB('#000000')),\n          time: { shared: true, mixed: true, linked: true, value: 0 },\n          roughness: 0.3,\n          metalness: 0.3,\n          uSpeed: { shared: true, mixed: true, linked: true, value: speed },\n          envMapIntensity: 10,\n          uNoiseIntensity: noiseIntensity,\n          uScale: scale\n        }\n      }),\n    [speed, noiseIntensity, scale]\n  );\n\n  return (\n    <CanvasWrapper>\n      <group rotation={[0, 0, degToRad(rotation)]}>\n        <PlaneNoise ref={meshRef} material={beamMaterial} count={beamNumber} width={beamWidth} height={beamHeight} />\n        <DirLight color={lightColor} position={[0, 3, 10]} />\n      </group>\n      <ambientLight intensity={1} />\n      <color attach=\"background\" args={['#000000']} />\n      <PerspectiveCamera makeDefault position={[0, 0, 20]} fov={30} />\n    </CanvasWrapper>\n  );\n};\n\nfunction createStackedPlanesBufferGeometry(\n  n: number,\n  width: number,\n  height: number,\n  spacing: number,\n  heightSegments: number\n): THREE.BufferGeometry {\n  const geometry = new THREE.BufferGeometry();\n  const numVertices = n * (heightSegments + 1) * 2;\n  const numFaces = n * heightSegments * 2;\n  const positions = new Float32Array(numVertices * 3);\n  const indices = new Uint32Array(numFaces * 3);\n  const uvs = new Float32Array(numVertices * 2);\n\n  let vertexOffset = 0;\n  let indexOffset = 0;\n  let uvOffset = 0;\n  const totalWidth = n * width + (n - 1) * spacing;\n  const xOffsetBase = -totalWidth / 2;\n\n  for (let i = 0; i < n; i++) {\n    const xOffset = xOffsetBase + i * (width + spacing);\n    const uvXOffset = Math.random() * 300;\n    const uvYOffset = Math.random() * 300;\n\n    for (let j = 0; j <= heightSegments; j++) {\n      const y = height * (j / heightSegments - 0.5);\n      const v0 = [xOffset, y, 0];\n      const v1 = [xOffset + width, y, 0];\n      positions.set([...v0, ...v1], vertexOffset * 3);\n\n      const uvY = j / heightSegments;\n      uvs.set([uvXOffset, uvY + uvYOffset, uvXOffset + 1, uvY + uvYOffset], uvOffset);\n\n      if (j < heightSegments) {\n        const a = vertexOffset,\n          b = vertexOffset + 1,\n          c = vertexOffset + 2,\n          d = vertexOffset + 3;\n        indices.set([a, b, c, c, b, d], indexOffset);\n        indexOffset += 6;\n      }\n      vertexOffset += 2;\n      uvOffset += 4;\n    }\n  }\n\n  geometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\n  geometry.setAttribute('uv', new THREE.BufferAttribute(uvs, 2));\n  geometry.setIndex(new THREE.BufferAttribute(indices, 1));\n  geometry.computeVertexNormals();\n  return geometry;\n}\n\nconst MergedPlanes = forwardRef<\n  THREE.Mesh<THREE.BufferGeometry, THREE.ShaderMaterial>,\n  {\n    material: THREE.ShaderMaterial;\n    width: number;\n    count: number;\n    height: number;\n  }\n>(({ material, width, count, height }, ref) => {\n  const mesh = useRef<THREE.Mesh<THREE.BufferGeometry, THREE.ShaderMaterial>>(null!);\n  useImperativeHandle(ref, () => mesh.current);\n  const geometry = useMemo(\n    () => createStackedPlanesBufferGeometry(count, width, height, 0, 100),\n    [count, width, height]\n  );\n  useFrame((_, delta) => {\n    mesh.current.material.uniforms.time.value += 0.1 * delta;\n  });\n  return <mesh ref={mesh} geometry={geometry} material={material} />;\n});\nMergedPlanes.displayName = 'MergedPlanes';\n\nconst PlaneNoise = forwardRef<\n  THREE.Mesh<THREE.BufferGeometry, THREE.ShaderMaterial>,\n  {\n    material: THREE.ShaderMaterial;\n    width: number;\n    count: number;\n    height: number;\n  }\n>((props, ref) => (\n  <MergedPlanes ref={ref} material={props.material} width={props.width} count={props.count} height={props.height} />\n));\nPlaneNoise.displayName = 'PlaneNoise';\n\nconst DirLight: FC<{ position: [number, number, number]; color: string }> = ({ position, color }) => {\n  const dir = useRef<THREE.DirectionalLight>(null!);\n  useEffect(() => {\n    if (!dir.current) return;\n    const cam = dir.current.shadow.camera as THREE.Camera & {\n      top: number;\n      bottom: number;\n      left: number;\n      right: number;\n      far: number;\n    };\n    cam.top = 24;\n    cam.bottom = -24;\n    cam.left = -24;\n    cam.right = 24;\n    cam.far = 64;\n    dir.current.shadow.bias = -0.004;\n  }, []);\n  return <directionalLight ref={dir} color={color} intensity={1} position={position} />;\n};\n\nexport default Beams;"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 831, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/components/Carousel.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState, useRef, useCallback } from 'react';\nimport { motion, PanInfo, useMotionValue, useTransform } from 'motion/react';\nimport React, { JSX } from 'react';\n\n// replace icons with your own if needed\nimport { FiCircle, FiCode, FiFileText, FiLayers, FiLayout } from 'react-icons/fi';\nexport interface CarouselItem {\n  title: string;\n  description: string;\n  id: number;\n  icon: React.ReactNode;\n}\n\nexport interface CarouselProps {\n  items?: CarouselItem[];\n  baseWidth?: number;\n  autoplay?: boolean;\n  autoplayDelay?: number;\n  pauseOnHover?: boolean;\n  loop?: boolean;\n  round?: boolean;\n}\n\nconst DEFAULT_ITEMS: CarouselItem[] = [\n  {\n    title: 'Text Animations',\n    description: 'Cool text animations for your projects.',\n    id: 1,\n    icon: <FiFileText className=\"h-[16px] w-[16px] text-white\" />\n  },\n  {\n    title: 'Animations',\n    description: 'Smooth animations for your projects.',\n    id: 2,\n    icon: <FiCircle className=\"h-[16px] w-[16px] text-white\" />\n  },\n  {\n    title: 'Components',\n    description: 'Reusable components for your projects.',\n    id: 3,\n    icon: <FiLayers className=\"h-[16px] w-[16px] text-white\" />\n  },\n  {\n    title: 'Backgrounds',\n    description: 'Beautiful backgrounds and patterns for your projects.',\n    id: 4,\n    icon: <FiLayout className=\"h-[16px] w-[16px] text-white\" />\n  },\n  {\n    title: 'Common UI',\n    description: 'Common UI components are coming soon!',\n    id: 5,\n    icon: <FiCode className=\"h-[16px] w-[16px] text-white\" />\n  }\n];\n\nconst DRAG_BUFFER = 0;\nconst VELOCITY_THRESHOLD = 500;\nconst GAP = 16;\nconst SPRING_OPTIONS = { type: 'spring' as const, stiffness: 300, damping: 30 };\n\nexport default function Carousel({\n  items = DEFAULT_ITEMS,\n  baseWidth = 300,\n  autoplay = false,\n  autoplayDelay = 3000,\n  pauseOnHover = false,\n  loop = false,\n  round = false\n}: CarouselProps): JSX.Element {\n  const containerPadding = 16;\n  const itemWidth = baseWidth - containerPadding * 2;\n  const trackItemOffset = itemWidth + GAP;\n\n  const carouselItems = loop ? [...items, items[0]] : items;\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n  const x = useMotionValue(0);\n  const [isHovered, setIsHovered] = useState<boolean>(false);\n  const [isResetting, setIsResetting] = useState<boolean>(false);\n\n  const containerRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (pauseOnHover && containerRef.current) {\n      const container = containerRef.current;\n      const handleMouseEnter = () => setIsHovered(true);\n      const handleMouseLeave = () => setIsHovered(false);\n      container.addEventListener('mouseenter', handleMouseEnter);\n      container.addEventListener('mouseleave', handleMouseLeave);\n      return () => {\n        container.removeEventListener('mouseenter', handleMouseEnter);\n        container.removeEventListener('mouseleave', handleMouseLeave);\n      };\n    }\n  }, [pauseOnHover]);\n\n  const autoAdvance = useCallback(() => {\n    setCurrentIndex(prev => (prev + 1) % items.length);\n  }, [items.length]);\n\n  useEffect(() => {\n    if (!autoplay) return;\n    if (pauseOnHover && isHovered) return;\n    \n    const timer = setInterval(autoAdvance, autoplayDelay);\n    return () => clearInterval(timer);\n  }, [autoplay, autoplayDelay, isHovered, pauseOnHover, autoAdvance]);\n\n  const effectiveTransition = isResetting ? { duration: 0 } : SPRING_OPTIONS;\n\n  const handleAnimationComplete = () => {\n    if (loop && currentIndex === carouselItems.length - 1) {\n      setIsResetting(true);\n      x.set(0);\n      setCurrentIndex(0);\n      setTimeout(() => setIsResetting(false), 50);\n    }\n  };\n\n  const handleDragEnd = (_: MouseEvent | TouchEvent | PointerEvent, info: PanInfo): void => {\n    const offset = info.offset.x;\n    const velocity = info.velocity.x;\n    if (offset < -DRAG_BUFFER || velocity < -VELOCITY_THRESHOLD) {\n      if (loop && currentIndex === items.length - 1) {\n        setCurrentIndex(currentIndex + 1);\n      } else {\n        setCurrentIndex(prev => Math.min(prev + 1, carouselItems.length - 1));\n      }\n    } else if (offset > DRAG_BUFFER || velocity > VELOCITY_THRESHOLD) {\n      if (loop && currentIndex === 0) {\n        setCurrentIndex(items.length - 1);\n      } else {\n        setCurrentIndex(prev => Math.max(prev - 1, 0));\n      }\n    }\n  };\n\n  const dragProps = loop\n    ? {}\n    : {\n        dragConstraints: {\n          left: -trackItemOffset * (carouselItems.length - 1),\n          right: 0\n        }\n      };\n\n  return (\n    <div\n      ref={containerRef}\n      className=\"relative w-full h-full flex items-center justify-center overflow-visible\"\n      style={{ width: `${baseWidth}px`, height: '400px' }}\n    >\n      <div className=\"flex items-center justify-center gap-8\">\n        {/* Previous card */}\n        <motion.div\n          className=\"relative flex flex-col items-center justify-center bg-gradient-to-br from-purple-900/20 to-black/40 border border-purple-500/20 rounded-2xl p-6 cursor-pointer\"\n          style={{ width: '200px', height: '280px' }}\n          animate={{ opacity: 0.6, scale: 0.85, rotateY: -15 }}\n          transition={{ duration: 0.5, ease: \"easeInOut\" }}\n          onClick={() => setCurrentIndex(prev => (prev - 1 + items.length) % items.length)}\n        >\n          {items[(currentIndex - 1 + items.length) % items.length] && (\n            <>\n              <div className=\"text-4xl mb-4\">{items[(currentIndex - 1 + items.length) % items.length].icon}</div>\n              <div className=\"text-purple-300 text-2xl font-bold mb-2\">{(currentIndex - 1 + items.length) % items.length + 1}</div>\n              <h3 className=\"text-white text-lg font-semibold text-center mb-2\">{items[(currentIndex - 1 + items.length) % items.length].title}</h3>\n              <p className=\"text-gray-300 text-sm text-center\">{items[(currentIndex - 1 + items.length) % items.length].description}</p>\n            </>\n          )}\n        </motion.div>\n\n        {/* Current card */}\n        <motion.div\n          className=\"relative flex flex-col items-center justify-center bg-gradient-to-br from-purple-800/30 to-black/60 border border-purple-400/30 rounded-2xl p-8 shadow-2xl\"\n          style={{ width: '280px', height: '350px' }}\n          animate={{ scale: 1, opacity: 1, rotateY: 0 }}\n          transition={{ duration: 0.5, ease: \"easeInOut\" }}\n        >\n          {items[currentIndex] && (\n            <>\n              <div className=\"text-5xl mb-6\">{items[currentIndex].icon}</div>\n              <div className=\"text-purple-200 text-3xl font-bold mb-4\">{currentIndex + 1}</div>\n              <h3 className=\"text-white text-xl font-bold text-center mb-4\">{items[currentIndex].title}</h3>\n              <p className=\"text-gray-200 text-center\">{items[currentIndex].description}</p>\n            </>\n          )}\n        </motion.div>\n\n        {/* Next card */}\n        <motion.div\n          className=\"relative flex flex-col items-center justify-center bg-gradient-to-br from-purple-900/20 to-black/40 border border-purple-500/20 rounded-2xl p-6 cursor-pointer\"\n          style={{ width: '200px', height: '280px' }}\n          animate={{ opacity: 0.6, scale: 0.85, rotateY: 15 }}\n          transition={{ duration: 0.5, ease: \"easeInOut\" }}\n          onClick={() => setCurrentIndex(prev => (prev + 1) % items.length)}\n        >\n          {items[(currentIndex + 1) % items.length] && (\n            <>\n              <div className=\"text-4xl mb-4\">{items[(currentIndex + 1) % items.length].icon}</div>\n              <div className=\"text-purple-300 text-2xl font-bold mb-2\">{(currentIndex + 1) % items.length + 1}</div>\n              <h3 className=\"text-white text-lg font-semibold text-center mb-2\">{items[(currentIndex + 1) % items.length].title}</h3>\n              <p className=\"text-gray-300 text-sm text-center\">{items[(currentIndex + 1) % items.length].description}</p>\n            </>\n          )}\n        </motion.div>\n      </div>\n      <div className=\"absolute bottom-4 left-1/2 transform -translate-x-1/2 flex gap-2\">\n        {items.map((_, index) => (\n          <motion.div\n            key={index}\n            className={`h-2 w-2 rounded-full cursor-pointer transition-colors duration-300 ${\n              currentIndex === index ? 'bg-purple-400' : 'bg-purple-800/40'\n            }`}\n            animate={{ scale: currentIndex === index ? 1.3 : 1 }}\n            onClick={() => setCurrentIndex(index)}\n            transition={{ duration: 0.2 }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}