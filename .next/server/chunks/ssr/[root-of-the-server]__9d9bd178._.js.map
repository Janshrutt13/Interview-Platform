{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/lib/actions/general.action.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { generateObject } from \"ai\";\r\nimport { google } from \"@ai-sdk/google\";\r\n\r\nimport { db } from \"@/firebase/admin\";\r\nimport { feedbackSchema } from \"@/constants\";\r\n\r\n\r\nexport async function getInterviewById(id: string): Promise<Interview | null> {\r\n    const interview = await db.collection(\"interviews\").doc(id).get();\r\n\r\n    return interview.data() as Interview | null;\r\n}\r\n\r\nexport async function getFeedbackByInterviewId(\r\n    params: GetFeedbackByInterviewIdParams\r\n): Promise<Feedback | null> {\r\n    const {interviewId, userId} = params;\r\n\r\n    const querySnapshot = await db\r\n        .collection(\"feedback\")\r\n        .where(\"interviewId\", \"==\", interviewId)\r\n        .where(\"userId\", \"==\", userId)\r\n        .limit(1)\r\n        .get();\r\n\r\n    if (querySnapshot.empty) return null;\r\n\r\n    const feedbackDoc = querySnapshot.docs[0];\r\n    return {id: feedbackDoc.id, ...feedbackDoc.data()} as Feedback;\r\n}\r\n\r\nexport async function getLatestInterviews(\r\n    params: GetLatestInterviewsParams\r\n): Promise<Interview[] | null> {\r\n    const { userId, limit = 20 } = params;\r\n\r\n    const interviews = await db\r\n        .collection(\"interviews\")\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .where(\"finalized\", \"==\", true)\r\n        .where(\"userId\", \"!=\", userId)\r\n        .limit(limit)\r\n        .get();\r\n\r\n    return interviews.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n    })) as Interview[];\r\n}\r\n\r\nexport async function getInterviewsByUserId(\r\n    userId: string\r\n): Promise<Interview[] | null> {\r\n    const interviews = await db\r\n        .collection(\"interviews\")\r\n        .where(\"userId\", \"==\", userId)\r\n        .orderBy(\"createdAt\", \"desc\")\r\n        .get();\r\n\r\n    return interviews.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n    })) as Interview[];\r\n}"],"names":[],"mappings":";;;;;;;;;;;AAKA;;;;;;;;AAIO,eAAe,iBAAiB,EAAU;IAC7C,MAAM,YAAY,MAAM,uHAAE,CAAC,UAAU,CAAC,cAAc,GAAG,CAAC,IAAI,GAAG;IAE/D,OAAO,UAAU,IAAI;AACzB;AAEO,eAAe,yBAClB,MAAsC;IAEtC,MAAM,EAAC,WAAW,EAAE,MAAM,EAAC,GAAG;IAE9B,MAAM,gBAAgB,MAAM,uHAAE,CACzB,UAAU,CAAC,YACX,KAAK,CAAC,eAAe,MAAM,aAC3B,KAAK,CAAC,UAAU,MAAM,QACtB,KAAK,CAAC,GACN,GAAG;IAER,IAAI,cAAc,KAAK,EAAE,OAAO;IAEhC,MAAM,cAAc,cAAc,IAAI,CAAC,EAAE;IACzC,OAAO;QAAC,IAAI,YAAY,EAAE;QAAE,GAAG,YAAY,IAAI,EAAE;IAAA;AACrD;AAEO,eAAe,oBAClB,MAAiC;IAEjC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,EAAE,GAAG;IAE/B,MAAM,aAAa,MAAM,uHAAE,CACtB,UAAU,CAAC,cACX,OAAO,CAAC,aAAa,QACrB,KAAK,CAAC,aAAa,MAAM,MACzB,KAAK,CAAC,UAAU,MAAM,QACtB,KAAK,CAAC,OACN,GAAG;IAER,OAAO,WAAW,IAAI,CAAC,GAAG,CAAC,CAAC,MAAQ,CAAC;YACjC,IAAI,IAAI,EAAE;YACV,GAAG,IAAI,IAAI,EAAE;QACjB,CAAC;AACL;AAEO,eAAe,sBAClB,MAAc;IAEd,MAAM,aAAa,MAAM,uHAAE,CACtB,UAAU,CAAC,cACX,KAAK,CAAC,UAAU,MAAM,QACtB,OAAO,CAAC,aAAa,QACrB,GAAG;IAER,OAAO,WAAW,IAAI,CAAC,GAAG,CAAC,CAAC,MAAQ,CAAC;YACjC,IAAI,IAAI,EAAE;YACV,GAAG,IAAI,IAAI,EAAE;QACjB,CAAC;AACL;;;IAxDsB;IAMA;IAkBA;IAmBA;;AA3CA,+OAAA;AAMA,+OAAA;AAkBA,+OAAA;AAmBA,+OAAA","debugId":null}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/.next-internal/server/app/%28root%29/interview/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {signOut as '0015b0661d446cd49d38a3441390aaf0ef8b733597'} from 'ACTIONS_MODULE0'\nexport {getCurrentUser as '007b05aee68fde14ff8a65f73a23247276923ab1a9'} from 'ACTIONS_MODULE0'\nexport {isAuthenticated as '009ecf70c4441253b255ff8b35f05bdffac86ad5c2'} from 'ACTIONS_MODULE0'\nexport {signUp as '4092afee6e2eee9f92848aae65993f28c9242c3620'} from 'ACTIONS_MODULE0'\nexport {signIn as '40dd2ef11e60b871a641e2342b29ca04d63654643b'} from 'ACTIONS_MODULE0'\nexport {setSessionCookie as '40f5cae6f7063e7f10625237e685fbccd4a63ce9fe'} from 'ACTIONS_MODULE0'\nexport {getInterviewById as '406577737dfdc991f33609dd9f23ab6f35f056d9fe'} from 'ACTIONS_MODULE1'\nexport {getFeedbackByInterviewId as '406a4cd9452f82b8152dc6b116628865ad015fb808'} from 'ACTIONS_MODULE1'\nexport {getLatestInterviews as '40ab7853301edc8eb360ec114f9725ebae489b50be'} from 'ACTIONS_MODULE1'\nexport {getInterviewsByUserId as '40933a149b4d0350ebb2aa36a7e1a8437321e82692'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AAMA","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/components/Agent.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/Agent.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/Agent.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAwR,GACrT,sDACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 159, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/components/Agent.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/Agent.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/Agent.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAoQ,GACjS,kCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/app/%28root%29/interview/page.tsx"],"sourcesContent":["import Agent from \"@/components/Agent\";\r\nimport {getCurrentUser} from \"@/lib/actions/auth.action\";\r\nimport {redirect} from \"next/navigation\";\r\n\r\nconst page = async () => {\r\n    const user = await getCurrentUser();\r\n\r\n    if (!user?.name || !user?.id) {\r\n        redirect(\"/login\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n           <h3>Interview Generation</h3>\r\n\r\n            <Agent\r\n                   userName = {user?.name}\r\n                   userId = {user?.id}\r\n                   type = \"generate\"\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default page;\r\n\r\n\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAAA;;;;;;;;;AAEA,MAAM,OAAO;IACT,MAAM,OAAO,MAAM,IAAA,kJAAc;IAEjC,IAAI,CAAC,MAAM,QAAQ,CAAC,MAAM,IAAI;QAC1B,IAAA,iMAAQ,EAAC;IACb;IAEA,qBACI;;0BACG,8OAAC;0BAAG;;;;;;0BAEH,8OAAC,+HAAK;gBACC,UAAY,MAAM;gBAClB,QAAU,MAAM;gBAChB,MAAO;;;;;;;;AAI1B;uCAEe","debugId":null}}]
}