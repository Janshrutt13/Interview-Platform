{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 69, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/firebase/admin.ts"],"sourcesContent":["import {initializeApp , cert , getApps} from \"firebase-admin/app\";\r\nimport {getAuth} from \"firebase-admin/auth\";\r\nimport {getFirestore} from \"firebase-admin/firestore\";\r\n\r\nconst initFirebaseAdmin = () => {\r\n    const apps = getApps();\r\n\r\n    if(!apps.length){\r\n        initializeApp({\r\n            credential : cert({\r\n                projectId : process.env.FIREBASE_PROJECT_ID,\r\n                clientEmail : process.env.FIREBASE_CLIENT_EMAIL,\r\n                privateKey : process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"),\r\n            }),\r\n        });\r\n    }\r\n\r\n\r\n    return {\r\n        auth : getAuth(),\r\n        db : getFirestore(),\r\n    }\r\n}\r\n\r\nexport const {db, auth} = initFirebaseAdmin()"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;;;;;;;AAEA,MAAM,oBAAoB;IACtB,MAAM,OAAO,IAAA,2JAAO;IAEpB,IAAG,CAAC,KAAK,MAAM,EAAC;QACZ,IAAA,iKAAa,EAAC;YACV,YAAa,IAAA,wJAAI,EAAC;gBACd,WAAY,QAAQ,GAAG,CAAC,mBAAmB;gBAC3C,aAAc,QAAQ,GAAG,CAAC,qBAAqB;gBAC/C,YAAa,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,QAAQ;YACnE;QACJ;IACJ;IAGA,OAAO;QACH,MAAO,IAAA,6JAAO;QACd,IAAK,IAAA,4KAAY;IACrB;AACJ;AAEO,MAAM,EAAC,EAAE,EAAE,IAAI,EAAC,GAAG","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/app/api/vapi/generate/route.ts"],"sourcesContent":["import {generateText} from \"ai\";\r\nimport {google} from \"@ai-sdk/google\";\r\n\r\nimport { db } from \"@/firebase/admin\";\r\nimport { getRandomInterviewCover } from \"@/lib/utils\";\r\n\r\nexport async function GET() {\r\n    return Response.json({ success: true  , data : 'THANK YOU!'} , {status : 200});\r\n}\r\n\r\nexport async function POST(request : Request) {\r\n    const{ type, role, level, techstack, amount, userid} = await request.json();\r\n\r\n    try{\r\n      const { text : questions } = await generateText({\r\n          model: google(\"gemini-2.0-flash-001\"),\r\n          prompt: `Prepare questions for a job interview.\r\n        The job role is ${role}.\r\n        The job experience level is ${level}.\r\n        The tech stack used in the job is: ${techstack}.\r\n        The focus between behavioural and technical questions should lean towards: ${type}.\r\n        The amount of questions required is: ${amount}.\r\n        Please return only the questions, without any additional text.\r\n        The questions are going to be read by a voice assistant so do not use \"/\" or \"*\" or any other special characters which might break the voice assistant.\r\n        Return the questions formatted like this:\r\n        [\"Question 1\", \"Question 2\", \"Question 3\"]\r\n        \r\n        Thank you! <3\r\n    `,\r\n      });\r\n\r\n      const interview = {\r\n          role : role,\r\n          type : type,\r\n          level : level,\r\n          techstack : techstack.split(\",\"),\r\n          questions : JSON.parse(questions), // ai returns in form of text, we need to return it in an array\r\n          userId : userid,\r\n          finalized : true,\r\n          createdAt : new Date().toISOString(),\r\n      };\r\n\r\n      await db.collection(\"interviews\").add(interview);\r\n\r\n      return Response.json({ success: true  } , {status : 200});\r\n\r\n    }\r\n    catch (err){\r\n        console.error(err);\r\n        return Response.json({success:false , error : err} , {status : 500});\r\n    }\r\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;;;;AAGO,eAAe;IAClB,OAAO,SAAS,IAAI,CAAC;QAAE,SAAS;QAAQ,MAAO;IAAY,GAAI;QAAC,QAAS;IAAG;AAChF;AAEO,eAAe,KAAK,OAAiB;IACxC,MAAK,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAC,GAAG,MAAM,QAAQ,IAAI;IAEzE,IAAG;QACD,MAAM,EAAE,MAAO,SAAS,EAAE,GAAG,MAAM,IAAA,sKAAY,EAAC;YAC5C,OAAO,IAAA,mKAAM,EAAC;YACd,QAAQ,CAAC;wBACK,EAAE,KAAK;oCACK,EAAE,MAAM;2CACD,EAAE,UAAU;mFAC4B,EAAE,KAAK;6CAC7C,EAAE,OAAO;;;;;;;IAOlD,CAAC;QACC;QAEA,MAAM,YAAY;YACd,MAAO;YACP,MAAO;YACP,OAAQ;YACR,WAAY,UAAU,KAAK,CAAC;YAC5B,WAAY,KAAK,KAAK,CAAC;YACvB,QAAS;YACT,WAAY;YACZ,WAAY,IAAI,OAAO,WAAW;QACtC;QAEA,MAAM,yHAAE,CAAC,UAAU,CAAC,cAAc,GAAG,CAAC;QAEtC,OAAO,SAAS,IAAI,CAAC;YAAE,SAAS;QAAM,GAAI;YAAC,QAAS;QAAG;IAEzD,EACA,OAAO,KAAI;QACP,QAAQ,KAAK,CAAC;QACd,OAAO,SAAS,IAAI,CAAC;YAAC,SAAQ;YAAQ,OAAQ;QAAG,GAAI;YAAC,QAAS;QAAG;IACtE;AACJ","debugId":null}}]
}