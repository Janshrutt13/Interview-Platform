{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/app/api/start-call/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\n\r\nexport async function POST(req: Request) {\r\n    try {\r\n        const body = await req.json();\r\n\r\n\r\n        const response = await fetch(\"https://api.vapi.ai/call/web\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                Authorization: `Bearer ${process.env.NEXT_VAPI_PRIVATE_KEY}`, // server-only\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                assistantId: process.env.NEXT_PUBLIC_VAPI_WORKFLOW_ID, // or workflowId\r\n                variableValues: body.variableValues,\r\n            }),\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        return NextResponse.json(data, { status: response.status });\r\n    } catch (err) {\r\n        console.error(\"Error starting call:\", err);\r\n        return NextResponse.json({ error: \"Failed to start call\" }, { status: 500 });\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,KAAK,GAAY;IACnC,IAAI;QACA,MAAM,OAAO,MAAM,IAAI,IAAI;QAG3B,MAAM,WAAW,MAAM,MAAM,gCAAgC;YACzD,QAAQ;YACR,SAAS;gBACL,eAAe,CAAC,OAAO,EAAE,QAAQ,GAAG,CAAC,qBAAqB,EAAE;gBAC5D,gBAAgB;YACpB;YACA,MAAM,KAAK,SAAS,CAAC;gBACjB,WAAW;gBACX,gBAAgB,KAAK,cAAc;YACvC;QACJ;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAEhC,OAAO,gJAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ,SAAS,MAAM;QAAC;IAC7D,EAAE,OAAO,KAAK;QACV,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACJ","debugId":null}}]
}