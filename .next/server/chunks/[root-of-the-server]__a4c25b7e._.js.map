{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/firebase/admin.ts"],"sourcesContent":["import {initializeApp , cert , getApps} from \"firebase-admin/app\";\r\nimport {getAuth} from \"firebase-admin/auth\";\r\nimport {getFirestore} from \"firebase-admin/firestore\";\r\n\r\nconst initFirebaseAdmin = () => {\r\n    const apps = getApps();\r\n\r\n    if(!apps.length){\r\n        initializeApp({\r\n            credential : cert({\r\n                projectId : process.env.FIREBASE_PROJECT_ID,\r\n                clientEmail : process.env.FIREBASE_CLIENT_EMAIL,\r\n                privateKey : process.env.FIREBASE_PRIVATE_KEY?.replace(/\\\\n/g, \"\\n\"),\r\n            }),\r\n        });\r\n    }\r\n\r\n\r\n    return {\r\n        auth : getAuth(),\r\n        db : getFirestore(),\r\n    }\r\n}\r\n\r\nexport const {db, auth} = initFirebaseAdmin()"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;;;;;;;AAEA,MAAM,oBAAoB;IACtB,MAAM,OAAO,IAAA,2JAAO;IAEpB,IAAG,CAAC,KAAK,MAAM,EAAC;QACZ,IAAA,iKAAa,EAAC;YACV,YAAa,IAAA,wJAAI,EAAC;gBACd,WAAY,QAAQ,GAAG,CAAC,mBAAmB;gBAC3C,aAAc,QAAQ,GAAG,CAAC,qBAAqB;gBAC/C,YAAa,QAAQ,GAAG,CAAC,oBAAoB,EAAE,QAAQ,QAAQ;YACnE;QACJ;IACJ;IAGA,OAAO;QACH,MAAO,IAAA,6JAAO;QACd,IAAK,IAAA,4KAAY;IACrB;AACJ;AAEO,MAAM,EAAC,EAAE,EAAE,IAAI,EAAC,GAAG","debugId":null}},
    {"offset": {"line": 123, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/app/api/vapi/generate/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\r\nimport { generateText } from \"ai\";\r\nimport { google } from \"@ai-sdk/google\";\r\nimport { db } from \"@/firebase/admin\";\r\n\r\nexport async function GET() {\r\n    return NextResponse.json({ success: true, data: \"THANK YOU!\" }, { status: 200 });\r\n}\r\n\r\nexport async function POST(request: Request) {\r\n    try {\r\n        const { type, role, level, techstack, amount, userid } = await request.json();\r\n\r\n        // Basic validation\r\n        if (!role || !type || !level || !techstack || !amount || !userid) {\r\n            return NextResponse.json(\r\n                { success: false, error: \"Missing required fields in request\" },\r\n                { status: 400 }\r\n            );\r\n        }\r\n\r\n        // Generate interview questions using AI\r\n        const { text: questions } = await generateText({\r\n            model: google(\"gemini-2.0-flash-001\"),\r\n            prompt: `Prepare questions for a job interview.\r\nThe job role is ${role}.\r\nThe job experience level is ${level}.\r\nThe tech stack used in the job is: ${techstack}.\r\nThe focus between behavioural and technical questions should lean towards: ${type}.\r\nThe amount of questions required is: ${amount}.\r\nPlease return only the questions, without any additional text.\r\nReturn the questions formatted like this:\r\n[\"Question 1\", \"Question 2\", \"Question 3\"]`,\r\n        });\r\n\r\n        const interview = {\r\n            role,\r\n            type,\r\n            level,\r\n            techstack: techstack.split(\",\"),\r\n            questions: JSON.parse(questions),\r\n            userId: userid,\r\n            finalized: true,\r\n            createdAt: new Date().toISOString(),\r\n        };\r\n\r\n        await db.collection(\"interviews\").add(interview);\r\n\r\n        return NextResponse.json({ success: true, interview }, { status: 200 });\r\n    } catch (err: any) {\r\n        console.error(\"AI generation error:\", err);\r\n        return NextResponse.json(\r\n            { success: false, error: err?.message || String(err) },\r\n            { status: 500 }\r\n        );\r\n    }\r\n}\r\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;AAEO,eAAe;IAClB,OAAO,gJAAY,CAAC,IAAI,CAAC;QAAE,SAAS;QAAM,MAAM;IAAa,GAAG;QAAE,QAAQ;IAAI;AAClF;AAEO,eAAe,KAAK,OAAgB;IACvC,IAAI;QACA,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE3E,mBAAmB;QACnB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ;YAC9D,OAAO,gJAAY,CAAC,IAAI,CACpB;gBAAE,SAAS;gBAAO,OAAO;YAAqC,GAC9D;gBAAE,QAAQ;YAAI;QAEtB;QAEA,wCAAwC;QACxC,MAAM,EAAE,MAAM,SAAS,EAAE,GAAG,MAAM,IAAA,sKAAY,EAAC;YAC3C,OAAO,IAAA,mKAAM,EAAC;YACd,QAAQ,CAAC;gBACL,EAAE,KAAK;4BACK,EAAE,MAAM;mCACD,EAAE,UAAU;2EAC4B,EAAE,KAAK;qCAC7C,EAAE,OAAO;;;0CAGJ,CAAC;QACnC;QAEA,MAAM,YAAY;YACd;YACA;YACA;YACA,WAAW,UAAU,KAAK,CAAC;YAC3B,WAAW,KAAK,KAAK,CAAC;YACtB,QAAQ;YACR,WAAW;YACX,WAAW,IAAI,OAAO,WAAW;QACrC;QAEA,MAAM,yHAAE,CAAC,UAAU,CAAC,cAAc,GAAG,CAAC;QAEtC,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAU,GAAG;YAAE,QAAQ;QAAI;IACzE,EAAE,OAAO,KAAU;QACf,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,gJAAY,CAAC,IAAI,CACpB;YAAE,SAAS;YAAO,OAAO,KAAK,WAAW,OAAO;QAAK,GACrD;YAAE,QAAQ;QAAI;IAEtB;AACJ","debugId":null}}]
}