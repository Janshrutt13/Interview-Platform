{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AAEA;;;AAEA,SAAS,MAAM,KAA4D;QAA5D,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC,GAA5D;IACb,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,8bACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 36, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/lib/actions/general.action.ts"],"sourcesContent":["\"use server\";\r\n\r\nimport { generateText } from \"ai\";\r\nimport { google } from \"@ai-sdk/google\";\r\n\r\nexport async function generateInterviewDossier(params: GenerateInterviewDossierParams) {\r\n    const { jobDescription, resume, companyName, concerns, isAxonMode = false } = params;\r\n\r\n    // Validate inputs\r\n    if (!jobDescription || !resume || !companyName) {\r\n        return { success: false, error: \"Missing required fields: jobDescription, resume, or companyName\" };\r\n    }\r\n\r\n    try {\r\n        console.log(\"Generating interview dossier with inputs:\", {\r\n            companyName,\r\n            jobDescriptionLength: jobDescription.length,\r\n            resumeLength: resume.length,\r\n            concernsLength: concerns.length\r\n        });\r\n\r\n        const prompt = isAxonMode ? `\r\nYou are AXON, an elite AI interview strategist. Your function is to generate a hyper-personalized, data-driven \"Interview Briefing.\"\r\n\r\nYour entire output must be in Markdown and strictly follow the structure below using the specified delimiters and formatting. Do not add any conversational text outside of this structure.\r\n\r\n<--BEGIN BRIEFING-->\r\n\r\n<--SECTION: HEADER-->\r\n# Interview Briefing: [Job Title] at ${companyName}\r\n**Synergy Score:** [Generate a numerical percentage score from 1-100 representing the match between the resume and job description, e.g., 85%]\r\n\r\n<--SECTION: SNAPSHOT-->\r\n## üöÄ Strategic Snapshot\r\n[In 3 bullet points, summarize the candidate's most compelling selling points. Frame them as \"strategic assets.\"]\r\n* **Strategic Asset 1:** ...\r\n* **Strategic Asset 2:** ...\r\n* **Strategic Asset 3:** ...\r\n\r\n<--SECTION: SKILL_ANALYSIS-->\r\n## üìä Skill Synergy Analysis\r\n[Identify the top 5 most important skills from the job description. For each, rate the candidate's experience from their resume on a scale of 1-5. Provide a brief justification.]\r\n* **[Skill Name 1]:** [Rating/5] - *Justification...*\r\n* **[Skill Name 2]:** [Rating/5] - *Justification...*\r\n* **[Skill Name 3]:** [Rating/5] - *Justification...*\r\n* **[Skill Name 4]:** [Rating/5] - *Justification...*\r\n* **[Skill Name 5]:** [Rating/5] - *Justification...*\r\n\r\n<--SECTION: QUESTIONS-->\r\n## üí° Intelligent Questions\r\n[Generate 8 questions. For EACH question, provide a rationale and at least one tag from this list: #Culture, #Technical, #Growth, #Strategy, #Logistics. Format each as a block.]\r\n\r\n**Question:** \"What does the onboarding process look like for this role, and what are the key milestones for the first 90 days?\"\r\n**Rationale:** This shows you are forward-thinking and focused on hitting the ground running effectively.\r\n**Tags:** #Logistics #Growth\r\n\r\n**Question:** \"How does the team handle collaboration on complex projects, especially when there are differing technical opinions?\"\r\n**Rationale:** This helps you understand the team's dynamic, communication style, and conflict resolution process.\r\n**Tags:** #Culture #Technical\r\n\r\n[...generate 6 more questions following this exact format...]\r\n\r\n<--SECTION: RED_FLAG_RADAR-->\r\n## üö© Red Flag Radar\r\n[Identify 1-2 potential gaps or concerns. For each, provide a \"Proactive Reframe\" strategy.]\r\n* **Potential Flag:** [Describe the gap, e.g., \"Lack of direct experience with Python.\"]\r\n    * **Proactive Reframe:** [Provide a strategy, e.g., \"Highlight your rapid learning ability by mentioning how you quickly mastered Java for the X project, and state your enthusiasm for applying that skill to Python.\"].\r\n\r\n<--END BRIEFING-->\r\n\r\n**INPUTS:**\r\nJob Description: ${jobDescription}\r\nResume: ${resume}\r\nCompany: ${companyName}\r\nConcerns: ${concerns}\r\n        ` : `\r\nYou are \"Interview Strategist AI,\" an expert career coach. Your task is to generate a personalized \"Interview Dossier\" based on the user's data.\r\n\r\nThe output must be in clean, well-formatted Markdown. Use \\`###\\` for each section title. Do not add any conversational intro or outro.\r\n\r\n---\r\n\r\n### üöÄ Your Key Selling Points\r\nAnalyze the resume against the job description. In 3-4 bullet points, summarize the user's strongest qualifications that make them an excellent fit.\r\n\r\n### üéØ Strategic Questions to Ask\r\nGenerate 8 insightful questions. For EACH question, add a brief \"Rationale\" in italics. Organize them into these categories using bold titles:\r\n**About the Role & Success**\r\n**About the Team & Culture**\r\n**About Company Strategy**\r\n\r\n### üö© Potential Gaps to Prepare For\r\nIdentify 1-2 potential gaps between the resume and the job description. For each, suggest a brief, proactive way to address it.\r\n\r\n### ‚≠ê Your Powerful Closing Statement\r\nCraft a concise, powerful closing statement template (2-3 sentences) that the user can adapt to end the interview on a high note.\r\n\r\n---\r\n**INPUTS:**\r\nJob Description: ${jobDescription}\r\nResume: ${resume}\r\nCompany: ${companyName}\r\nConcerns: ${concerns}\r\n        `;\r\n\r\n        const systemPrompt = isAxonMode \r\n            ? \"You are AXON, an elite AI interview strategist. Generate hyper-personalized, data-driven interview briefings with exact formatting and delimiters as specified.\"\r\n            : \"You are an expert career coach and interview strategist. Generate comprehensive, actionable interview preparation materials in clean Markdown format.\";\r\n\r\n        const { text } = await generateText({\r\n            model: google(\"gemini-2.0-flash-001\"),\r\n            prompt,\r\n            system: systemPrompt,\r\n        });\r\n\r\n        console.log(\"Generated text length:\", text?.length || 0);\r\n        console.log(\"Generated text preview:\", text?.substring(0, 200) || \"No text generated\");\r\n\r\n        if (!text || text.trim().length === 0) {\r\n            return { success: false, error: \"AI generated empty response\" };\r\n        }\r\n\r\n        return { success: true, dossier: text };\r\n    } catch (error) {\r\n        console.error(\"Error generating interview dossier:\", error);\r\n        return { success: false, error: `Failed to generate interview dossier: ${error instanceof Error ? error.message : 'Unknown error'}` };\r\n    }\r\n}\r\n\r\nexport async function generateChatResponse(params: {\r\n    interviewBriefing: string;\r\n    conversationHistory: Array<{ role: string; content: string; timestamp: Date }>;\r\n    userMessage: string;\r\n}) {\r\n    const { interviewBriefing, conversationHistory, userMessage } = params;\r\n\r\n    try {\r\n        // Format conversation history\r\n        const formattedHistory = conversationHistory\r\n            .map(msg => `${msg.role === \"user\" ? \"User\" : \"Coach\"}: ${msg.content}`)\r\n            .join(\"\\n\");\r\n\r\n        const { text } = await generateText({\r\n            model: google(\"gemini-2.0-flash-001\"),\r\n            prompt: `\r\n**ROLE & GOAL**\r\nYou are an AI Interview Coach, an expert assistant to the main \"AXON\" strategist. Your name is \"Coach.\" Your primary goal is to help a job candidate understand, expand upon, and practice with the specific \"Interview Briefing\" they have already generated. You must be encouraging, concise, and professional.\r\n\r\n**CONTEXT**\r\nYou will be given the complete [INTERVIEW BRIEFING] and the ongoing [CONVERSATION HISTORY]. All of your responses MUST be based on this context.\r\n\r\n**CAPABILITIES (What you CAN do):**\r\n\r\n1.  **Clarify Concepts:** If the user asks about an interview term (e.g., \"What is the STAR method?\"), provide a clear, concise definition.\r\n2.  **Generate More Questions:** If the user asks for more questions about a specific topic (e.g., \"Can you give me another question about team culture?\"), generate 1-2 relevant, insightful questions.\r\n3.  **Role-Play & Practice:** If the user says \"Let's practice\" or \"Ask me a question,\" you will act as the interviewer.\r\n    * Pick one of the insightful questions from the briefing.\r\n    * Ask it clearly.\r\n    * After the user provides their answer, give them brief, constructive feedback based on the STAR method (Situation, Task, Action, Result). The feedback should be encouraging.\r\n4.  **Company Research (Simulated):** If the user asks for more information about the company, provide a brief, professional summary as if you had just done a quick web search. Preface your answer with \"Based on publicly available information...\"\r\n5.  **Rephrasing & Tone:** If the user asks for help rephrasing a question or an answer, provide a better alternative, explaining why it's more effective.\r\n\r\n**RULES & CONSTRAINTS (What you CANNOT do):**\r\n\r\n* **DO NOT** invent facts about the company.\r\n* **DO NOT** answer questions outside the scope of interview preparation. If asked, gracefully respond with: \"My expertise is focused on helping you prepare for this interview. How about we practice one of the questions from your briefing?\"\r\n* **ALWAYS** be concise. Use bullet points and short paragraphs.\r\n\r\n---\r\n**INPUTS:**\r\n\r\n**[INTERVIEW BRIEFING]:**\r\n${interviewBriefing || \"No interview briefing available yet. Please generate one first.\"}\r\n\r\n**[CONVERSATION HISTORY]:**\r\n${formattedHistory}\r\n\r\n**[USER'S NEWEST MESSAGE]:**\r\n${userMessage}\r\n            `,\r\n            system: \"You are Coach, an AI Interview Coach. Be encouraging, concise, and professional. Focus only on interview preparation and practice.\",\r\n        });\r\n\r\n        if (!text || text.trim().length === 0) {\r\n            return { success: false, error: \"AI generated empty response\" };\r\n        }\r\n\r\n        return { success: true, message: text };\r\n    } catch (error) {\r\n        console.error(\"Error generating chat response:\", error);\r\n        return { success: false, error: `Failed to generate chat response: ${error instanceof Error ? error.message : 'Unknown error'}` };\r\n    }\r\n}\r\n\r\n"],"names":[],"mappings":";;;;;;;IAiIsB,uBAAA,WAAA,GAAA,IAAA,kPAAA,EAAA,8CAAA,uOAAA,EAAA,KAAA,GAAA,6OAAA,EAAA","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/components/Chatbot.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { generateChatResponse } from \"@/lib/actions/general.action\";\r\n\r\ninterface Message {\r\n  id: string;\r\n  role: \"user\" | \"assistant\";\r\n  content: string;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface ChatbotProps {\r\n  interviewBriefing?: string;\r\n}\r\n\r\nexport default function Chatbot({ interviewBriefing }: ChatbotProps) {\r\n  const [messages, setMessages] = useState<Message[]>([\r\n    {\r\n      id: \"1\",\r\n      role: \"assistant\",\r\n      content: \"Hi! I'm Coach, your AI Interview Coach. I'm here to help you understand and practice with your Interview Briefing. How can I assist you today?\",\r\n      timestamp: new Date()\r\n    }\r\n  ]);\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const messagesEndRef = useRef<HTMLDivElement>(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const handleSendMessage = async () => {\r\n    if (!inputValue.trim() || isLoading) return;\r\n\r\n    const userMessage: Message = {\r\n      id: Date.now().toString(),\r\n      role: \"user\",\r\n      content: inputValue.trim(),\r\n      timestamp: new Date()\r\n    };\r\n\r\n    setMessages(prev => [...prev, userMessage]);\r\n    setInputValue(\"\");\r\n    setIsLoading(true);\r\n\r\n    try {\r\n      const response = await generateChatResponse({\r\n        interviewBriefing: interviewBriefing || \"\",\r\n        conversationHistory: messages,\r\n        userMessage: inputValue.trim()\r\n      });\r\n\r\n      if (response.success && response.message) {\r\n        const assistantMessage: Message = {\r\n          id: (Date.now() + 1).toString(),\r\n          role: \"assistant\",\r\n          content: response.message,\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, assistantMessage]);\r\n      } else {\r\n        const errorMessage: Message = {\r\n          id: (Date.now() + 1).toString(),\r\n          role: \"assistant\",\r\n          content: \"I apologize, but I'm having trouble processing your request right now. Please try again.\",\r\n          timestamp: new Date()\r\n        };\r\n        setMessages(prev => [...prev, errorMessage]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error sending message:\", error);\r\n      const errorMessage: Message = {\r\n        id: (Date.now() + 1).toString(),\r\n        role: \"assistant\",\r\n        content: \"I apologize, but I encountered an error. Please try again.\",\r\n        timestamp: new Date()\r\n      };\r\n      setMessages(prev => [...prev, errorMessage]);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyPress = (e: React.KeyboardEvent) => {\r\n    if (e.key === \"Enter\" && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card-border max-w-2xl mx-auto\">\r\n      <div className=\"card-interview\">\r\n        {/* Header */}\r\n        <div className=\"flex items-center gap-3 mb-4 pb-4 border-b border-gray-200\">\r\n          <div className=\"w-8 h-8 bg-blue-500 rounded-full flex items-center justify-center\">\r\n            <span className=\"text-white text-sm font-bold\">C</span>\r\n          </div>\r\n          <div>\r\n            <h3 className=\"font-semibold text-gray-900\">Coach</h3>\r\n            <p className=\"text-sm text-gray-500\">AI Interview Coach</p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Messages */}\r\n        <div className=\"h-96 overflow-y-auto mb-4 space-y-4\">\r\n          {messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              className={`flex ${message.role === \"user\" ? \"justify-end\" : \"justify-start\"}`}\r\n            >\r\n              <div\r\n                className={`max-w-[80%] p-3 rounded-lg ${\r\n                  message.role === \"user\"\r\n                    ? \"bg-blue-500 text-white\"\r\n                    : \"bg-gray-800 border border-gray-600 text-white\"\r\n                }`}\r\n              >\r\n                <p className=\"text-sm whitespace-pre-wrap\">{message.content}</p>\r\n                <p className=\"text-xs opacity-70 mt-1\">\r\n                  {message.timestamp.getHours().toString().padStart(2, '0')}:\r\n                  {message.timestamp.getMinutes().toString().padStart(2, '0')}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          {isLoading && (\r\n            <div className=\"flex justify-start\">\r\n              <div className=\"bg-gray-800 border border-gray-600 p-3 rounded-lg\">\r\n                <div className=\"flex space-x-1\">\r\n                  <div className=\"w-2 h-2 bg-gray-300 rounded-full animate-bounce\"></div>\r\n                  <div className=\"w-2 h-2 bg-gray-300 rounded-full animate-bounce\" style={{ animationDelay: '0.1s' }}></div>\r\n                  <div className=\"w-2 h-2 bg-gray-300 rounded-full animate-bounce\" style={{ animationDelay: '0.2s' }}></div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div ref={messagesEndRef} />\r\n        </div>\r\n\r\n        {/* Input */}\r\n        <div className=\"flex gap-2\">\r\n          <Input\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            onKeyPress={handleKeyPress}\r\n            placeholder=\"Ask me about your interview preparation...\"\r\n            disabled={isLoading}\r\n            className=\"flex-1\"\r\n          />\r\n          <Button\r\n            onClick={handleSendMessage}\r\n            disabled={isLoading || !inputValue.trim()}\r\n            className=\"btn-primary\"\r\n          >\r\n            Send\r\n          </Button>\r\n        </div>\r\n\r\n        {/* Quick Actions */}\r\n        <div className=\"mt-4 pt-4 border-t border-gray-200\">\r\n          <p className=\"text-xs text-gray-500 mb-2\">Quick actions:</p>\r\n          <div className=\"flex flex-wrap gap-2\">\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => setInputValue(\"Let's practice - ask me a question\")}\r\n              disabled={isLoading}\r\n            >\r\n              Practice Interview\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => setInputValue(\"What is the STAR method?\")}\r\n              disabled={isLoading}\r\n            >\r\n              Explain STAR Method\r\n            </Button>\r\n            <Button\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              onClick={() => setInputValue(\"Give me more questions about team culture\")}\r\n              disabled={isLoading}\r\n            >\r\n              More Questions\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAkBe,SAAS,QAAQ,KAAmC;QAAnC,EAAE,iBAAiB,EAAgB,GAAnC;;IAC9B,MAAM,CAAC,UAAU,YAAY,GAAG,IAAA,yKAAQ,EAAY;QAClD;YACE,IAAI;YACJ,MAAM;YACN,SAAS;YACT,WAAW,IAAI;QACjB;KACD;IACD,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,yKAAQ,EAAC;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,yKAAQ,EAAC;IAC3C,MAAM,iBAAiB,IAAA,uKAAM,EAAiB;IAE9C,MAAM,iBAAiB;YACrB;SAAA,0BAAA,eAAe,OAAO,cAAtB,8CAAA,wBAAwB,cAAc,CAAC;YAAE,UAAU;QAAS;IAC9D;IAEA,IAAA,0KAAS;6BAAC;YACR;QACF;4BAAG;QAAC;KAAS;IAEb,MAAM,oBAAoB;QACxB,IAAI,CAAC,WAAW,IAAI,MAAM,WAAW;QAErC,MAAM,cAAuB;YAC3B,IAAI,KAAK,GAAG,GAAG,QAAQ;YACvB,MAAM;YACN,SAAS,WAAW,IAAI;YACxB,WAAW,IAAI;QACjB;QAEA,YAAY,CAAA,OAAQ;mBAAI;gBAAM;aAAY;QAC1C,cAAc;QACd,aAAa;QAEb,IAAI;YACF,MAAM,WAAW,MAAM,IAAA,iLAAoB,EAAC;gBAC1C,mBAAmB,qBAAqB;gBACxC,qBAAqB;gBACrB,aAAa,WAAW,IAAI;YAC9B;YAEA,IAAI,SAAS,OAAO,IAAI,SAAS,OAAO,EAAE;gBACxC,MAAM,mBAA4B;oBAChC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,QAAQ;oBAC7B,MAAM;oBACN,SAAS,SAAS,OAAO;oBACzB,WAAW,IAAI;gBACjB;gBACA,YAAY,CAAA,OAAQ;2BAAI;wBAAM;qBAAiB;YACjD,OAAO;gBACL,MAAM,eAAwB;oBAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,QAAQ;oBAC7B,MAAM;oBACN,SAAS;oBACT,WAAW,IAAI;gBACjB;gBACA,YAAY,CAAA,OAAQ;2BAAI;wBAAM;qBAAa;YAC7C;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,0BAA0B;YACxC,MAAM,eAAwB;gBAC5B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,EAAE,QAAQ;gBAC7B,MAAM;gBACN,SAAS;gBACT,WAAW,IAAI;YACjB;YACA,YAAY,CAAA,OAAQ;uBAAI;oBAAM;iBAAa;QAC7C,SAAU;YACR,aAAa;QACf;IACF;IAEA,MAAM,iBAAiB,CAAC;QACtB,IAAI,EAAE,GAAG,KAAK,WAAW,CAAC,EAAE,QAAQ,EAAE;YACpC,EAAE,cAAc;YAChB;QACF;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAI,WAAU;;8BAEb,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAK,WAAU;0CAA+B;;;;;;;;;;;sCAEjD,6LAAC;;8CACC,6LAAC;oCAAG,WAAU;8CAA8B;;;;;;8CAC5C,6LAAC;oCAAE,WAAU;8CAAwB;;;;;;;;;;;;;;;;;;8BAKzC,6LAAC;oBAAI,WAAU;;wBACZ,SAAS,GAAG,CAAC,CAAC,wBACb,6LAAC;gCAEC,WAAW,AAAC,QAAiE,OAA1D,QAAQ,IAAI,KAAK,SAAS,gBAAgB;0CAE7D,cAAA,6LAAC;oCACC,WAAW,AAAC,8BAIX,OAHC,QAAQ,IAAI,KAAK,SACb,2BACA;;sDAGN,6LAAC;4CAAE,WAAU;sDAA+B,QAAQ,OAAO;;;;;;sDAC3D,6LAAC;4CAAE,WAAU;;gDACV,QAAQ,SAAS,CAAC,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;gDAAK;gDACzD,QAAQ,SAAS,CAAC,UAAU,GAAG,QAAQ,GAAG,QAAQ,CAAC,GAAG;;;;;;;;;;;;;+BAbtD,QAAQ,EAAE;;;;;wBAkBlB,2BACC,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;;;;;sDACf,6LAAC;4CAAI,WAAU;4CAAkD,OAAO;gDAAE,gBAAgB;4CAAO;;;;;;sDACjG,6LAAC;4CAAI,WAAU;4CAAkD,OAAO;gDAAE,gBAAgB;4CAAO;;;;;;;;;;;;;;;;;;;;;;sCAKzG,6LAAC;4BAAI,KAAK;;;;;;;;;;;;8BAIZ,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,sIAAK;4BACJ,OAAO;4BACP,UAAU,CAAC,IAAM,cAAc,EAAE,MAAM,CAAC,KAAK;4BAC7C,YAAY;4BACZ,aAAY;4BACZ,UAAU;4BACV,WAAU;;;;;;sCAEZ,6LAAC,wIAAM;4BACL,SAAS;4BACT,UAAU,aAAa,CAAC,WAAW,IAAI;4BACvC,WAAU;sCACX;;;;;;;;;;;;8BAMH,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAE,WAAU;sCAA6B;;;;;;sCAC1C,6LAAC;4BAAI,WAAU;;8CACb,6LAAC,wIAAM;oCACL,SAAQ;oCACR,MAAK;oCACL,SAAS,IAAM,cAAc;oCAC7B,UAAU;8CACX;;;;;;8CAGD,6LAAC,wIAAM;oCACL,SAAQ;oCACR,MAAK;oCACL,SAAS,IAAM,cAAc;oCAC7B,UAAU;8CACX;;;;;;8CAGD,6LAAC,wIAAM;oCACL,SAAQ;oCACR,MAAK;oCACL,SAAS,IAAM,cAAc;oCAC7B,UAAU;8CACX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;GAtLwB;KAAA","debugId":null}},
    {"offset": {"line": 427, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/lenovo/OneDrive/Desktop/interview-platform/components/PhaseComparison.tsx"],"sourcesContent":["\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { useRouter } from \"next/navigation\";\n\nexport default function PhaseComparison() {\n  const router = useRouter();\n\n  return (\n    <div className=\"max-w-7xl mx-auto p-6 space-y-8\">\n      <div className=\"text-center space-y-4 mb-12\">\n        <h1 className=\"text-4xl font-bold\">Choose Your Interview Preparation Phase</h1>\n        <p className=\"text-xl\">Two distinct approaches to master your interview skills</p>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8 items-stretch\">\n        {/* Phase 1: AXON */}\n        <div className=\"card-border h-full\">\n          <div className=\"card h-full\">\n            <div className=\"p-8 flex flex-col h-full\">\n              <div className=\"text-center mb-8\">\n                <div className=\"bg-primary-200 text-dark-100 rounded-full w-20 h-20 flex items-center justify-center mx-auto mb-6\">\n                  <span className=\"text-3xl font-bold\">1</span>\n                </div>\n                <h2 className=\"text-3xl font-bold mb-3\">AXON Live Practice</h2>\n                <p className=\"text-light-100\">Real-time Interview Simulation</p>\n              </div>\n\n              <div className=\"flex-1 space-y-4 mb-8\">\n                <div className=\"grid grid-cols-1 gap-4\">\n                  <div className=\"card-border\">\n                    <div className=\"card\">\n                      <div className=\"p-5 flex items-start space-x-3\">\n                        <span className=\"text-2xl\">üé§</span>\n                        <div>\n                          <h3 className=\"font-semibold text-primary-200 mb-1\">Voice Interaction</h3>\n                          <p className=\"text-sm text-light-100\">Practice with AI interviewer using real voice conversation</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"card-border\">\n                    <div className=\"card\">\n                      <div className=\"p-5 flex items-start space-x-3\">\n                        <span className=\"text-2xl\">‚ö°</span>\n                        <div>\n                          <h3 className=\"font-semibold text-primary-200 mb-1\">Instant Feedback</h3>\n                          <p className=\"text-sm text-light-100\">Get immediate scores on confidence, clarity, and pace</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"card-border\">\n                    <div className=\"card\">\n                      <div className=\"p-5 flex items-start space-x-3\">\n                        <span className=\"text-2xl\">üéØ</span>\n                        <div>\n                          <h3 className=\"font-semibold text-primary-200 mb-1\">Adaptive Questions</h3>\n                          <p className=\"text-sm text-light-100\">AI adjusts difficulty based on your performance</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"card-border\">\n                    <div className=\"card\">\n                      <div className=\"p-5 flex items-start space-x-3\">\n                        <span className=\"text-2xl\">‚è±Ô∏è</span>\n                        <div>\n                          <h3 className=\"font-semibold text-primary-200 mb-1\">Quick Sessions</h3>\n                          <p className=\"text-sm text-light-100\">15-30 minute focused practice sessions</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"text-center mt-auto\">\n                <Button \n                  onClick={() => router.push('/axon')}\n                  className=\"btn-primary w-full text-lg py-4 mb-3\"\n                >\n                  Start AXON Practice\n                </Button>\n                <p className=\"text-sm text-light-100 opacity-80\">Perfect for improving communication skills</p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Phase 2: Dossier */}\n        <div className=\"card-border h-full\">\n          <div className=\"card h-full\">\n            <div className=\"p-8 flex flex-col h-full\">\n              <div className=\"text-center mb-8\">\n                <div className=\"bg-success-100 text-dark-100 rounded-full w-20 h-20 flex items-center justify-center mx-auto mb-6\">\n                  <span className=\"text-3xl font-bold\">2</span>\n                </div>\n                <h2 className=\"text-3xl font-bold mb-3\">Strategic Dossier</h2>\n                <p className=\"text-light-100\">Deep Analysis & Preparation</p>\n              </div>\n\n              <div className=\"flex-1 space-y-4 mb-8\">\n                <div className=\"grid grid-cols-1 gap-4\">\n                  <div className=\"card-border\">\n                    <div className=\"card\">\n                      <div className=\"p-5 flex items-start space-x-3\">\n                        <span className=\"text-2xl\">üìä</span>\n                        <div>\n                          <h3 className=\"font-semibold text-success-100 mb-1\">Profile Analysis</h3>\n                          <p className=\"text-sm text-light-100\">Comprehensive analysis of your resume vs job requirements</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"card-border\">\n                    <div className=\"card\">\n                      <div className=\"p-5 flex items-start space-x-3\">\n                        <span className=\"text-2xl\">üè¢</span>\n                        <div>\n                          <h3 className=\"font-semibold text-success-100 mb-1\">Company Research</h3>\n                          <p className=\"text-sm text-light-100\">Tailored questions based on company culture and values</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"card-border\">\n                    <div className=\"card\">\n                      <div className=\"p-5 flex items-start space-x-3\">\n                        <span className=\"text-2xl\">üìù</span>\n                        <div>\n                          <h3 className=\"font-semibold text-success-100 mb-1\">Question Banks</h3>\n                          <p className=\"text-sm text-light-100\">Curated question sets for your specific role and level</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  \n                  <div className=\"card-border\">\n                    <div className=\"card\">\n                      <div className=\"p-5 flex items-start space-x-3\">\n                        <span className=\"text-2xl\">üìà</span>\n                        <div>\n                          <h3 className=\"font-semibold text-success-100 mb-1\">Long-term Planning</h3>\n                          <p className=\"text-sm text-light-100\">Multi-week preparation schedules with progress tracking</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"text-center mt-auto\">\n                <Button \n                  onClick={() => router.push('/')}\n                  className=\"btn-secondary w-full text-lg py-4 mb-3\"\n                >\n                  Create Strategic Dossier\n                </Button>\n                <p className=\"text-sm text-light-100 opacity-80\">Perfect for comprehensive preparation</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"card-border max-w-4xl mx-auto\">\n        <div className=\"card\">\n          <div className=\"p-8\">\n            <h3 className=\"text-2xl font-semibold text-center mb-8\">Recommended Approach</h3>\n            <div className=\"flex flex-col sm:flex-row items-center justify-center gap-6 sm:gap-8\">\n              <div className=\"card-border flex-1 max-w-xs\">\n                <div className=\"card\">\n                  <div className=\"px-6 py-4 text-center\">\n                    <div className=\"bg-primary-200 text-dark-100 rounded-full w-8 h-8 flex items-center justify-center mx-auto mb-2\">\n                      <span className=\"font-bold\">1</span>\n                    </div>\n                    <span className=\"font-semibold text-primary-200\">Start with AXON</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"text-light-400 text-3xl transform rotate-90 sm:rotate-0\">‚Üí</div>\n              <div className=\"card-border flex-1 max-w-xs\">\n                <div className=\"card\">\n                  <div className=\"px-6 py-4 text-center\">\n                    <div className=\"bg-success-100 text-dark-100 rounded-full w-8 h-8 flex items-center justify-center mx-auto mb-2\">\n                      <span className=\"font-bold\">2</span>\n                    </div>\n                    <span className=\"font-semibold text-success-100\">Deep dive with Dossier</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <p className=\"text-center text-light-100 mt-8 text-lg\">\n              Practice your delivery first, then strategically prepare for specific interviews\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}